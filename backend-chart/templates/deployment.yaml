apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "meet-queue-chart.fullname" . }}
  labels:
    {{- include "meet-queue-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "meet-queue-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "meet-queue-chart.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      serviceAccountName: {{ include "meet-queue-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-config
                  key: NODE_ENV
            - name: DB_URI
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-config
                  key: DB_URI
            - name: DB_USER
              value: {{ .Values.mongodb.mongodbUsername }}
            #TODO: Name of secret should change depending on environment, 
            # need to create different sealed secrets for them.
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: mongodb-password
            - name: AUTH_AUTHORIZE_URI
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-config
                  key: AUTH_AUTHORIZE_URI
            - name: AUTH_VERIFY_URI
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-config
                  key: AUTH_VERIFY_URI
            - name: AUTH_REDIRECT_URI
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-config
                  key: AUTH_REDIRECT_URI
            - name: AUTH_API_TOKEN
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-config
                  key: AUTH_API_TOKEN
            - name: AUTH_OTP_URI
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-config
                  key: AUTH_OTP_URI
            - name: AUTH_DEVELOPER_ID
              valueFrom:
                configMapKeyRef:
                  name: {{.Release.Name}}-config
                  key: AUTH_DEVELOPER_ID
          ports:
          - containerPort: {{ .Values.service.targetPort }}
          # volumeMounts:
          # - name: {{ .Values.image.mountName }}
          #   mountPath: {{ .Values.image.mountPath }}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: {{ .Values.service.targetPort }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: {{ .Values.service.targetPort }}
              scheme: HTTP
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}      
      {{- with .Values.nodeSelector }}
      restartPolicy: Never
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
